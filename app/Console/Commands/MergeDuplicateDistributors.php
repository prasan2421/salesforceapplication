<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;

use App\Distributor;

use App\TaskLog;

use DB;

class MergeDuplicateDistributors extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'distributor:merge-duplicates';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Merge duplicates';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle()
    {
        ini_set('memory_limit', '8192M');

        $sapCodes = ['100365', '100437', '100483', '100512', '100513', '100537', '100607', '100628', '100717', '100762', '100780', '100878', '100885', '100926', '100960', '101014', '101016', '101019', '101028', '101035', '101037', '101050', '101073', '101079', '101097', '101195', '101206', '101229', '101383', '101451', '101470', '101535', '101575', '101587', '101607', '101635', '101756', '101765', '102043', '102108', '102207', '102216', '102281', '102302', '102341', '102365', '102382', '102526', '102564', '102572', '102579', '102592', '102635', '102642', '102654', '102663', '102682', '102699', '102774', '102792', '102808', '102809', '102816', '102819', '102824', '102832', '102834', '102846', '102848', '102860', '102866', '102923', '102999', '103059', '103071', '103178', '103181', '103182', '103190', '103192', '103193', '103195', '103198', '103199', '103202', '103204', '103218', '103221', '103225', '103226', '103229', '103245', '103264', '103303', '103359', '103363', '103446', '103447', '103448', '103449', '103450', '103453', '103457', '103460', '103461', '103462', '103464', '103466', '103467', '103468', '103469', '103472', '103490', '103497', '103542', '103596', '103598', '103602', '103607', '103622', '103652', '103666', '103672', '103673', '103674', '103677', '103747', '103758', '103769', '103862', '103925', '103976', '103991', '104014', '104108', '104146', '104187', '104189', '104190', '104231', '104266', '104271', '104468', '104525', '104533', '104535', '104537', '104668', '104672', '104737', '104752', '104790', '104820', '104906', '104935', '104963', '104976', '105033', '105114', '105142', '105330', '105336', '105340', '105341', '105343', '105362', '105363', '105365', '105370', '105417', '105539', '105612', '105629', '105672', '105685', '105694', '105747', '106024', '106237', '106247', '106669', '106900', '107161', '107163', '107166', '107168', '107201', '107287', '107355', '107362', '107366', '107370', '107494', '107629', '107697', '107739', '107841', '108099', '108100', '108351', '108382', '108650', '108664', '108686', '108702', '108860', '108882', '108975', '109018', '109019', '109166', '109381', '109471', '109473', '109475', '109681', '109686', '109687', '109764', '109779', '109836', '110079', '110147', '110386', '110631', '110690', '110691', '110704', '110725', '110767', '110770', '111173', '111198', '111325', '111658', '111708', '111788', '112058', '112094', '112117', '112273', '112426', '112463', '112476', '112478', '112540', '112552', '112621', '112717', '112756', '114062', '114217', '114930', '115095', '115958', '116007', '116046', '116206', '116248', '116386', '116466', '116856', '116869', '116911', '116941', '117083', '308598'];

        foreach($sapCodes as $sapCode) {
            $query = Distributor::where('sap_code', $sapCode);

            if($query->count() > 1) {
                $distributors = $query->get();

                $firstDistributor = $distributors->shift();

                foreach($distributors as $distributor) {
                    $verticalIds = $distributor->verticals()->pluck('_id')->toArray();
                    if(count($verticalIds) > 0) {
                        $firstDistributor->verticals()->attach($verticalIds);
                        $distributor->verticals()->sync([]);
                    }

                    $routeIds = $distributor->routes()->pluck('_id')->toArray();
                    if(count($routeIds) > 0) {
                        $firstDistributor->routes()->attach($routeIds);
                        $distributor->routes()->sync([]);
                    }

                    $distributor->users()->update([
                        'distributor_id' => $firstDistributor->_id
                    ]);

                    $distributor->delete();
                }
            }
        }

        $taskLog = new TaskLog;
        $taskLog->command = $this->signature;
        $taskLog->filename = null;
        $taskLog->save();
    }
}
